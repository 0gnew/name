from time import sleep
from random import randint

from bestiary.knight import Knight
from bestiary.dragon import Dragon

from weaponry.sword import Sword
from weaponry.shield import Shield
from weaponry.crossbow import Crossbow

import volume_of_poems


print("ü•Ä –ë–∞–ª–ª–∞–¥–∞ –æ –¥—Ä–∞–∫–æ–Ω–µ, —Ä—ã—Ü–∞—Ä–µ –∏ –û–û–ü ü•Ä")

# –°–ª–æ–≤–æ –æ –±–µ—Å—Ç–∏–∏ ü•Ä
volume_of_poems.dragons_legend()
dragon = Dragon()

# –°–ª–æ–≤–æ –æ–± –∏–º–µ–Ω–∏ ü•Ä
print()
print("–£–∂–∞—Å–Ω–æ–π —Ç–≤–∞—Ä–∏ –≤—ã–∑–æ–≤ –±—Ä–æ—Å–∏–ª ‚Äî –≤–µ–ª–∏–∫–∏–π —Ä—ã—Ü–∞—Ä—å, —Ö—Ä–∞–±—Ä—ã–π –≤–æ–∏–Ω")
try:
    hero: Knight = Knight("–†–æ—Å—Å –í–∞–Ω –ì–≤–∏–¥–æ")
except TypeError:
    volume_of_poems.are_you_still_a_knight()
try:
    print(f"–ò –∑–≤–∞–ª–∏ –µ–≥–æ {hero.name}, –∏ –∏–º–µ–Ω–∏ –æ–Ω –±—ã–ª –¥–æ—Å—Ç–æ–∏–Ω!")
except AttributeError:
    volume_of_poems.knight_without_a_name()
######################################################

# –°–ª–æ–≤–æ –æ –∑–¥–æ—Ä–æ–≤—å–µ ü•Ä
print("–†–æ–¥–∏–ª—Å—è –≤ –∑–Ω–∞—Ç–Ω–æ–º –¥–æ–º–µ –æ–Ω, –∂–∏–ª –Ω–∞ —Ä–∞–∑–¥–æ–ª—å–µ")
try:
    if hero.health.check() == 100:
        print("–û–Ω —Ñ–µ—Ö—Ç–æ–≤–∞–Ω—å—é –æ–±—É—á–∏–ª—Å—è, –∏ –±—ã–ª —Ö–æ—Ä–æ—à –∑–¥–æ—Ä–æ–≤—å–µ–º")
    else:
        volume_of_poems.are_you_still_a_human()
except AttributeError:
    volume_of_poems.spoiled_health()

######################################################

# –°–ª–æ–≤–æ –æ –º–µ—á–µ ü•Ä
print()
print("–ù–∞–º–µ—Ä–µ–≤–∞–ª—Å—è –æ–Ω —Å—Ä–∞–∑–∏—Ç—å –º–µ—á–æ–º –¥—Ä–∞–∫–æ–Ω–∞,")
print("–ò –∑–≤–∞–ª—Å—è –º–µ—á –µ–≥–æ...", end="")
try:
    hero.equipment.sword = Sword(ranged=False,
                                 damage=10,
                                 name=Knight.NOBLE_SWORD_NAME)
    print(" " + hero.equipment.sword.name + "!")
except AttributeError:
    volume_of_poems.inglorious_fate("sword")
######################################################

# –°–ª–æ–≤–æ –æ —â–∏—Ç–µ ü•Ä
print("–í –¥—Ä—É–≥–æ–π —Ä—É–∫–µ –µ–≥–æ –±—ã–ª —â–∏—Ç —Å—Ç–∞–ª—å–Ω–æ–π —Å –≥–µ—Ä–±–æ–º –∫–æ—Ä–æ–Ω—ã")
hero.equipment.shield = Shield()
print("–ü—Ä–∏–∫–∏–Ω—É–ª —â–∏—Ç –≤ —Ä—É–∫–µ... ", end="")
try:
    if hero.check_shield():
        print("–ü–æ—Å–ª—É–∂–∏—Ç –æ–Ω –¥–ª—è –æ–±–æ—Ä–æ–Ω—ã! ")
    else:
        print("–û—Ö... —â–∏—Ç –µ–≥–æ —Ä–∞–∑–æ—Ä–≤–∞–Ω")
        volume_of_poems.inglorious_fate("shield")
except AttributeError:
    volume_of_poems.the_shield_of_crown()
######################################################

# –°–ª–æ–≤–æ –æ–± –∞—Ä–±–∞–ª–µ—Ç–µ ü•Ä
print()
print("–ù–∞ –ø–æ—è—Å–µ, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –Ω–µ—Ç-–Ω–µ—Ç –∏ –¥–∞, –∞–≤–æ—Å—å –¥–∞-–¥–∞ –∏ –Ω–µ—Ç")
print("–ù–∞—à –≤–æ–∏–Ω –±—Ä–∞–≤—ã–π, —Ä—ã—Ü–∞—Ä—å –º–æ—â–Ω—ã–π, –ø–æ–≤–µ—Å–∏–ª –º–∏–Ω–∏-–∞—Ä–±–∞–ª–µ—Ç")
hero.equipment.crossbow = Crossbow(True, 10)
print("–ò –∑–∞—Ä—è–¥–∏–ª –≤ –Ω–µ–≥–æ –æ–Ω —Ç—Ä–∏ –±–æ–ª—Ç–∞")
try:
    hero.loads_crossbow(bolts=3)
    if len(hero.equipment.crossbow) != 3:
        volume_of_poems.uneducated_shameful_death()
except AttributeError:
    volume_of_poems.inglorious_fate("crossbow")
print("–î—Ä–∞–∫–æ–Ω –ø–æ–≤–µ—Ä–∂–µ–Ω –±—É–¥–µ—Ç, –ø—É—Å—Ç—å –ø–æ–ª–µ—Ç–∏—Ç —Ö–æ—Ç—å —Å–≤–æ–ª–æ—Ç–∞")
######################################################

# –°–ª–æ–≤–æ –æ –±–∏—Ç–≤–µ ü•Ä
volume_of_poems.dragon_comes()

print()
print("–ò —Ö–æ—Ç—å –Ω–∞ –ø–æ–µ–¥–∏–Ω–æ–∫ —Å —Ç–≤–∞—Ä—å—é –≤—ã—à–µ–ª,\n"
      "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è –≤–µ–ª–∏—Ç –∑–∞–∫–æ–Ω,\n"
      "–£–∑—Ä–∏ –∂–µ, —Å–ª—É—à–∞–π –±—ã–¥–ª–æ,")
if str(hero) != f"–í–æ—Ç —è ‚Äî {hero.name}, –º–æ–π –º–µ—á ‚Äî {hero.equipment.sword.name}!":
    volume_of_poems.forgotten_himself()
print(hero)  # "–í–æ—Ç —è ‚Äî {–∏–º—è}, –º–æ–π –º–µ—á ‚Äî {–∏–º—è_–º–µ—á–∞}!"
print("–ê –Ω—ã–Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª—é —Å–ª–∞–≤–Ω—ã—Ö —Ä–æ–¥–∏—á–µ–π –º–æ–∏—Ö!")

for elder in ["–ü–∞–Ω–¥–∞—Å –í–∞–Ω –ì–≤–∏–¥–æ", "–î–∂–∞–Ω–≥–æ –í–∞–Ω –ì–≤–∏–¥–æ", "–§–ª–∞—Å–∫ –í–∞–Ω –ì–≤–∏–¥–æ"]:
    result = ""
    try:
        result = Knight.pronoun_an_elder(elder)
    except AttributeError:
        volume_of_poems.forgotten_his_roots()
    expected = f"–ú–æ–π —Å–ª–∞–≤–Ω—ã–π –ø—Ä–µ–¥–æ–∫, —Ä—ã—Ü–∞—Ä—å {elder}"
    if result == expected:
        print(result)
    else:
        volume_of_poems.forgotten_his_roots()


print("–£–º—Ä–∏ –¥—Ä–∞–∫–æ–Ω!")

######################################################
###   –ö–æ–¥ –¥–∞–ª—å—à–µ –Ω–µ –¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è,   ###
### —ç—Ç–æ –∫–æ–Ω—Ü–æ–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é –º—ã —Å –≤–∞–º–∏ –ø–∏—Å–∞–ª–∏ ###
######################################################


def dragon_attacks(knight: Knight, dragon_attack: int, attack_type: str):
    if knight.equipment.shield.health.alive:
        knight.equipment.shield.health.damaged(dragon_attack)
        if attack_type == "claws":
            print(f"üêâ üõ°Ô∏è –ù–µ –¥—Ä–µ–º–ª–µ—Ç –±–µ—Å—Ç–∏—è... –¢–µ—Ä–∑–∞–µ—Ç —â–∏—Ç –∫–æ–≥—Ç—è–º–∏ –Ω–∞ {dragon_attack} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞")
        else:
            print(f"üî• üõ° –ù–µ –¥—Ä–µ–º–ª–µ—Ç –±–µ—Å—Ç–∏—è... –û–≥–Ω–µ–º –∂–∂–µ—Ç —â–∏—Ç –Ω–∞ {dragon_attack} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞")
    else:
        knight.health.damaged(dragon_attack)
        if attack_type == "claws":
            print(f"üêâ –ù–µ –¥—Ä–µ–º–ª–µ—Ç –±–µ—Å—Ç–∏—è... –ë—å—ë—Ç —Ä—ã—Ü–∞—Ä—è –∫–æ–≥—Ç—è–º–∏ –Ω–∞ {dragon_attack} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞ ")
        else:
            print(f"üî• –ù–µ –¥—Ä–µ–º–ª–µ—Ç –±–µ—Å—Ç–∏—è... –û–≥–Ω–µ–º –∂–∂–µ—Ç —Ä—ã—Ü–∞—Ä—è –Ω–∞ {dragon_attack} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞ ")


for i in range(3):
    print("...")
    sleep(0.5)
print("ü•Ä")
sleep(2)

print()
while hero.health.alive and dragon.health.alive:
    if not dragon.is_flying:
        heros_strike = hero.equipment.sword.deal_damage()
        dragon.health.damaged(heros_strike)
        sleep(0.5)
        print(f"üó°Ô∏è –†–∞–∑–º–∞—Ö –º–µ—á–∞, "
              f"–æ—Ç–≤–∞–∂–Ω—ã–π —Ä—ã—Ü–∞—Ä—å —Ç–≤–∞—Ä—å —É–≤–µ—á–∏—Ç ‚Äî {heros_strike} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞")

        if not dragon.health.alive: break
        dragon_attacks(hero, dragon.claws.double_attack(), "claws")
        dragon.is_it_time_to_fly()
    else:
        heros_shot = hero.equipment.crossbow.shoot()
        dragon.health.damaged(heros_shot)
        sleep(0.5)
        print(f"üèπ –¢—è–∂–µ–ª—ã–π –≤–æ–∑–¥—É—Ö —Ä–∞—Å—Å–µ–∫–∞–µ—Ç –±–æ–ª—Ç, "
              f"–æ—Ç–≤–∞–∂–Ω—ã–π —Ä—ã—Ü–∞—Ä—å —Ç–≤–∞—Ä—å —É–≤–µ—á–∏—Ç ‚Äî {heros_shot} –æ—á–∫–æ–≤ —É—Ä–æ–Ω–∞")

        if not dragon.health.alive and randint(1, 10) % 2 == 0:
            break
        else:
            print("–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥—ã—Ö–∞–Ω—å–µ –±–µ—Å—Ç–∏–∏ ‚Äî –æ–≥–æ–Ω—å üî•")
        dragon_attacks(hero, dragon.fire.shoot(), "fire")

    print(f"–†—ã—Ü–∞—Ä—å: {hero.health.check()}", end="")
    print(f" + üõ°Ô∏è{hero.equipment.shield.health.check()}" if hero.equipment.shield.health.alive else "")
    print(f"–î—Ä–∞–∫–æ–Ω: {dragon.health.check()}")
    sleep(0.5)

if not hero.health.alive and not dragon.health.alive:
    volume_of_poems.both_dead()
elif not hero.health.alive:
    volume_of_poems.hero_is_dead()
elif not dragon.health.alive:
    volume_of_poems.dragon_is_dead()

volume_of_poems.coda()
