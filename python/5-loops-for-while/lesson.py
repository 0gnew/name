###########################################################
######################## Цикл for  ########################  
###########################################################

######################## Задание 1 ########################  
# Функция должна принимать список строк и возвращать новую  
# строку, содержащую все строки из списка, соединенные через  
# пробелы, но только те, которые содержат более трех символов.  
# Пример:  
# Вход: ["hello", "hi", "yes", "world"]  
# Выход: "hello world"  
  
def join_long_strings(strings):  
    pass  # TODO: реализуйте функцию  
  
######################## Задание 2 ########################  
# Функция должна принимать список чисел и возвращать список,  
# в котором каждый элемент умножен на два, но только если он  
# является четным числом.  
# Пример:  
# Вход: [1, 2, 3, 4]  
# Выход: [1, 4, 3, 8]  
  
def double_even_numbers(numbers):  
    pass  # TODO: реализуйте функцию  
  
######################## Задание 3 ########################  
# Функция должна принимать список чисел и возвращать список,  
# содержащий только те числа, которые больше среднего значения  
# всех чисел в списке.  
# Пример:  
# Вход: [1, 3, 5, 7]  
# Выход: [5, 7]  
  
def above_average(numbers):  
    pass  # TODO: реализуйте функцию  


############################################################ 
######################## Цикл while ########################  
############################################################ 

# Задание 1: Сумма чисел  
def sum_numbers_while(n) -> int:  
    """  
    Принимает целое число n и возвращает сумму всех чисел от 1 до n включительно.  
    Например, для n = 5, функция должна вернуть 15 (1+2+3+4+5).  
    """  
    pass  
  
#######################################  

# Задание 2: Сумма цифр до однозначного числа
def sum_digits_to_single(n):
    """
    Принимает целое число n и возвращает сумму его цифр, повторяя процесс,
    пока результат не станет однозначным числом.
    Например, для n = 9875, функция должна вернуть 2 (9+8+7+5=29, 2+9=11, 1+1=2).
    Подсказка, не забывай про то, что результат функции map нужно оборачивать в list
    """
    pass
  
#######################################  

# Задание 3: Проверка на палиндром
def is_palindrome_while(s):
    """
    Принимает строку s и возвращает True, если строка является палиндромом,
    и False в противном случае. Игнорируйте пробелы и регистр.
    Например, для s = "A man a plan a canal Panama", функция должна вернуть True.
    """
    pass

  
# Код ниже не трогай, там я запускаю тесты 
try:  
    from examination import run_for_tests, run_while_tests
    run_for_tests(join_long_strings, double_even_numbers, above_average)  
    run_while_tests(sum_numbers_while, sum_digits_to_single, is_palindrome_while)  
except AssertionError as e:  
    print(e)  
